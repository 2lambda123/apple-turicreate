language: minimal

services:
  - docker

cache:
  directories:
    - $HOME/.docker_ccache
    - $HOME/.docker_images

env:
  global:
    - CI=false
    - OMP_NUM_THREADS=4

before_script:
  - mkdir -p $HOME/.docker_images
  - [[ -f $HOME/.docker_images/image.gz ]] && docker load -i $HOME/.docker_images/image.gz

script:
  # We sometimes get `error: No space left on device`
  # The workaround seems to be to force blocking I/O
  # See https://github.com/travis-ci/travis-ci/issues/8902 and
  # https://github.com/travis-ci/travis-ci/issues/4704#issuecomment-348435959
  # Check whether O_NONBLOCK is set (probably should print "1"):
  - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'
  # Turn off O_NONBLOCK:
  - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
  # Check whether O_NONBLOCK is set (should print "0"):
  - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'

  # Remove style transfer unit test due to out-of-memory error.
  # Remove some additional tests temporarily to get under the two-hour timeout.
  - rm src/unity/python/turicreate/test/test_style_transfer.py src/unity/python/turicreate/test/test_object_detector.py

  # Build the wheel
  - bash scripts/make_wheel.sh --build_number=$CI_PIPELINE_ID --num_procs=3 --debug --skip_cpp_test --skip_doc --docker

before_cache:
  - docker save turicreate-temporary-build-image | gzip -c > $HOME/.docker_images/image.gz