language: minimal

services:
  - docker

cache:
  directories:
    - $HOME/.docker_ccache
    - $HOME/.docker_images
    - target

stages:
  - create_images
  - build
  - test

env:
  global:
    - CI=false
    - OMP_NUM_THREADS=4

jobs:
  include:
    - stage: create_images
      name: create_images_python2.7
      env: PYTHON_VERSION=2.7
      script:
        # clear target out of the cache, in case it's there from a previous build
        - rm -rf target
        # build each, if needed (skip if version is already in the cache)
        - ./scripts/create_docker_images.sh --persist_to_repo_dir

    - stage: create_images
      name: create_images_python3.5
      env: PYTHON_VERSION=3.5
      script:
        # clear target out of the cache, in case it's there from a previous build
        - rm -rf target
        # build each, if needed (skip if version is already in the cache)
        - ./scripts/create_docker_images.sh --persist_to_repo_dir

    - stage: build
      name: build_10.04_python2.7
      env: PYTHON_VERSION=2.7
      script:
        # We sometimes get `error: No space left on device`
        # The workaround seems to be to force blocking I/O
        # See https://github.com/travis-ci/travis-ci/issues/8902 and
        # https://github.com/travis-ci/travis-ci/issues/4704#issuecomment-348435959
        # Check whether O_NONBLOCK is set (probably should print "1"):
        - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'
        # Turn off O_NONBLOCK:
        - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
        # Check whether O_NONBLOCK is set (should print "0"):
        - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'

        # Build the wheel
        - bash scripts/make_wheel.sh --build_number=$CI_PIPELINE_ID --num_procs=3 --debug --skip_cpp_test --skip_test --skip_doc --docker-python${PYTHON_VERSION}

    - stage: build
      name: build_10.04_python3.5
      env: PYTHON_VERSION=3.5
      script:
        # We sometimes get `error: No space left on device`
        # The workaround seems to be to force blocking I/O
        # See https://github.com/travis-ci/travis-ci/issues/8902 and
        # https://github.com/travis-ci/travis-ci/issues/4704#issuecomment-348435959
        # Check whether O_NONBLOCK is set (probably should print "1"):
        - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'
        # Turn off O_NONBLOCK:
        - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); fcntl.fcntl(sys.stdout, fcntl.F_SETFL, flags&~os.O_NONBLOCK);'
        # Check whether O_NONBLOCK is set (should print "0"):
        - python -c 'import os,sys,fcntl; flags = fcntl.fcntl(sys.stdout, fcntl.F_GETFL); print(flags&os.O_NONBLOCK);'

        # Build the wheel
        - bash scripts/make_wheel.sh --build_number=$CI_PIPELINE_ID --num_procs=3 --debug --skip_cpp_test --skip_test --skip_doc --docker-python${PYTHON_VERSION}

    - stage: test
      name: test_python2.7
      env: PYTHON_VERSION=2.7
      script:
        # Remove style transfer unit test due to out-of-memory error.
        # Remove some additional tests temporarily to get under the two-hour timeout.
        - rm src/unity/python/turicreate/test/test_style_transfer.py src/unity/python/turicreate/test/test_object_detector.py
        - bash scripts/test_wheel.sh --docker-python2.7

    - stage: test
      env: PYTHON_VERSION=3.5
      name: test_python3.5
      script:
        # Remove style transfer unit test due to out-of-memory error.
        # Remove some additional tests temporarily to get under the two-hour timeout.
        - rm src/unity/python/turicreate/test/test_style_transfer.py src/unity/python/turicreate/test/test_object_detector.py
        - bash scripts/test_wheel.sh --docker-python3.5
