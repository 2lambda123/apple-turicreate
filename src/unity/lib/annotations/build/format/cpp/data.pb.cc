// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: data.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "data.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace TuriCreate {
namespace Annotation {
namespace Specification {
class ImageDatumDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<ImageDatum> {
} _ImageDatum_default_instance_;
class TextDatumDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<TextDatum> {
} _TextDatum_default_instance_;
class DatumDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Datum> {
} _Datum_default_instance_;
class DataDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<Data> {
} _Data_default_instance_;

namespace protobuf_data_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[4];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDatum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDatum, width_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDatum, height_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDatum, channels_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ImageDatum, imgdata_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextDatum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(TextDatum, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, datumhash_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, images_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Datum, text_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Data, data_),
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, -1, sizeof(ImageDatum)},
  { 9, -1, sizeof(TextDatum)},
  { 15, -1, sizeof(Datum)},
  { 23, -1, sizeof(Data)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_ImageDatum_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_TextDatum_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Datum_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_Data_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "data.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 4);
}

}  // namespace

void TableStruct::Shutdown() {
  _ImageDatum_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _TextDatum_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _Datum_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
  _Data_default_instance_.Shutdown();
  delete file_level_metadata[3].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _ImageDatum_default_instance_.DefaultConstruct();
  _TextDatum_default_instance_.DefaultConstruct();
  _Datum_default_instance_.DefaultConstruct();
  _Data_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\ndata.proto\022#TuriCreate.Annotation.Spec"
      "ification\"N\n\nImageDatum\022\r\n\005width\030\001 \001(\005\022\016"
      "\n\006height\030\002 \001(\005\022\020\n\010channels\030\003 \001(\005\022\017\n\007imgD"
      "ata\030\n \001(\014\"\031\n\tTextDatum\022\014\n\004text\030\001 \001(\t\"\231\001\n"
      "\005Datum\022\021\n\tdatumHash\030\001 \001(\003\022\?\n\006images\030\n \003("
      "\0132/.TuriCreate.Annotation.Specification."
      "ImageDatum\022<\n\004text\030\024 \003(\0132..TuriCreate.An"
      "notation.Specification.TextDatum\"@\n\004Data"
      "\0228\n\004data\030\001 \003(\0132*.TuriCreate.Annotation.S"
      "pecification.Datumb\006proto3"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 386);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "data.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_data_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int ImageDatum::kWidthFieldNumber;
const int ImageDatum::kHeightFieldNumber;
const int ImageDatum::kChannelsFieldNumber;
const int ImageDatum::kImgDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

ImageDatum::ImageDatum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TuriCreate.Annotation.Specification.ImageDatum)
}
ImageDatum::ImageDatum(const ImageDatum& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  imgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.imgdata().size() > 0) {
    imgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imgdata_);
  }
  ::memcpy(&width_, &from.width_,
    reinterpret_cast<char*>(&channels_) -
    reinterpret_cast<char*>(&width_) + sizeof(channels_));
  // @@protoc_insertion_point(copy_constructor:TuriCreate.Annotation.Specification.ImageDatum)
}

void ImageDatum::SharedCtor() {
  imgdata_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, reinterpret_cast<char*>(&channels_) -
    reinterpret_cast<char*>(&width_) + sizeof(channels_));
  _cached_size_ = 0;
}

ImageDatum::~ImageDatum() {
  // @@protoc_insertion_point(destructor:TuriCreate.Annotation.Specification.ImageDatum)
  SharedDtor();
}

void ImageDatum::SharedDtor() {
  imgdata_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void ImageDatum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ImageDatum::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const ImageDatum& ImageDatum::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

ImageDatum* ImageDatum::New(::google::protobuf::Arena* arena) const {
  ImageDatum* n = new ImageDatum;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void ImageDatum::Clear() {
// @@protoc_insertion_point(message_clear_start:TuriCreate.Annotation.Specification.ImageDatum)
  imgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&width_, 0, reinterpret_cast<char*>(&channels_) -
    reinterpret_cast<char*>(&width_) + sizeof(channels_));
}

bool ImageDatum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TuriCreate.Annotation.Specification.ImageDatum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 width = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &width_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 height = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &height_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 channels = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &channels_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes imgData = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_imgdata()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TuriCreate.Annotation.Specification.ImageDatum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TuriCreate.Annotation.Specification.ImageDatum)
  return false;
#undef DO_
}

void ImageDatum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TuriCreate.Annotation.Specification.ImageDatum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->width() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->width(), output);
  }

  // int32 height = 2;
  if (this->height() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->height(), output);
  }

  // int32 channels = 3;
  if (this->channels() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->channels(), output);
  }

  // bytes imgData = 10;
  if (this->imgdata().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      10, this->imgdata(), output);
  }

  // @@protoc_insertion_point(serialize_end:TuriCreate.Annotation.Specification.ImageDatum)
}

::google::protobuf::uint8* ImageDatum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TuriCreate.Annotation.Specification.ImageDatum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 width = 1;
  if (this->width() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->width(), target);
  }

  // int32 height = 2;
  if (this->height() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->height(), target);
  }

  // int32 channels = 3;
  if (this->channels() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->channels(), target);
  }

  // bytes imgData = 10;
  if (this->imgdata().size() > 0) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        10, this->imgdata(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TuriCreate.Annotation.Specification.ImageDatum)
  return target;
}

size_t ImageDatum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TuriCreate.Annotation.Specification.ImageDatum)
  size_t total_size = 0;

  // bytes imgData = 10;
  if (this->imgdata().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::BytesSize(
        this->imgdata());
  }

  // int32 width = 1;
  if (this->width() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->width());
  }

  // int32 height = 2;
  if (this->height() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->height());
  }

  // int32 channels = 3;
  if (this->channels() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int32Size(
        this->channels());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ImageDatum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TuriCreate.Annotation.Specification.ImageDatum)
  GOOGLE_DCHECK_NE(&from, this);
  const ImageDatum* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const ImageDatum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TuriCreate.Annotation.Specification.ImageDatum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TuriCreate.Annotation.Specification.ImageDatum)
    MergeFrom(*source);
  }
}

void ImageDatum::MergeFrom(const ImageDatum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TuriCreate.Annotation.Specification.ImageDatum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.imgdata().size() > 0) {

    imgdata_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.imgdata_);
  }
  if (from.width() != 0) {
    set_width(from.width());
  }
  if (from.height() != 0) {
    set_height(from.height());
  }
  if (from.channels() != 0) {
    set_channels(from.channels());
  }
}

void ImageDatum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TuriCreate.Annotation.Specification.ImageDatum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ImageDatum::CopyFrom(const ImageDatum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TuriCreate.Annotation.Specification.ImageDatum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ImageDatum::IsInitialized() const {
  return true;
}

void ImageDatum::Swap(ImageDatum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void ImageDatum::InternalSwap(ImageDatum* other) {
  imgdata_.Swap(&other->imgdata_);
  std::swap(width_, other->width_);
  std::swap(height_, other->height_);
  std::swap(channels_, other->channels_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata ImageDatum::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// ImageDatum

// int32 width = 1;
void ImageDatum::clear_width() {
  width_ = 0;
}
::google::protobuf::int32 ImageDatum::width() const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.ImageDatum.width)
  return width_;
}
void ImageDatum::set_width(::google::protobuf::int32 value) {
  
  width_ = value;
  // @@protoc_insertion_point(field_set:TuriCreate.Annotation.Specification.ImageDatum.width)
}

// int32 height = 2;
void ImageDatum::clear_height() {
  height_ = 0;
}
::google::protobuf::int32 ImageDatum::height() const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.ImageDatum.height)
  return height_;
}
void ImageDatum::set_height(::google::protobuf::int32 value) {
  
  height_ = value;
  // @@protoc_insertion_point(field_set:TuriCreate.Annotation.Specification.ImageDatum.height)
}

// int32 channels = 3;
void ImageDatum::clear_channels() {
  channels_ = 0;
}
::google::protobuf::int32 ImageDatum::channels() const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.ImageDatum.channels)
  return channels_;
}
void ImageDatum::set_channels(::google::protobuf::int32 value) {
  
  channels_ = value;
  // @@protoc_insertion_point(field_set:TuriCreate.Annotation.Specification.ImageDatum.channels)
}

// bytes imgData = 10;
void ImageDatum::clear_imgdata() {
  imgdata_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& ImageDatum::imgdata() const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.ImageDatum.imgData)
  return imgdata_.GetNoArena();
}
void ImageDatum::set_imgdata(const ::std::string& value) {
  
  imgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TuriCreate.Annotation.Specification.ImageDatum.imgData)
}
#if LANG_CXX11
void ImageDatum::set_imgdata(::std::string&& value) {
  
  imgdata_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TuriCreate.Annotation.Specification.ImageDatum.imgData)
}
#endif
void ImageDatum::set_imgdata(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  imgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TuriCreate.Annotation.Specification.ImageDatum.imgData)
}
void ImageDatum::set_imgdata(const void* value, size_t size) {
  
  imgdata_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TuriCreate.Annotation.Specification.ImageDatum.imgData)
}
::std::string* ImageDatum::mutable_imgdata() {
  
  // @@protoc_insertion_point(field_mutable:TuriCreate.Annotation.Specification.ImageDatum.imgData)
  return imgdata_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* ImageDatum::release_imgdata() {
  // @@protoc_insertion_point(field_release:TuriCreate.Annotation.Specification.ImageDatum.imgData)
  
  return imgdata_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void ImageDatum::set_allocated_imgdata(::std::string* imgdata) {
  if (imgdata != NULL) {
    
  } else {
    
  }
  imgdata_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), imgdata);
  // @@protoc_insertion_point(field_set_allocated:TuriCreate.Annotation.Specification.ImageDatum.imgData)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int TextDatum::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

TextDatum::TextDatum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TuriCreate.Annotation.Specification.TextDatum)
}
TextDatum::TextDatum(const TextDatum& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.text().size() > 0) {
    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
  // @@protoc_insertion_point(copy_constructor:TuriCreate.Annotation.Specification.TextDatum)
}

void TextDatum::SharedCtor() {
  text_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

TextDatum::~TextDatum() {
  // @@protoc_insertion_point(destructor:TuriCreate.Annotation.Specification.TextDatum)
  SharedDtor();
}

void TextDatum::SharedDtor() {
  text_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void TextDatum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* TextDatum::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const TextDatum& TextDatum::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

TextDatum* TextDatum::New(::google::protobuf::Arena* arena) const {
  TextDatum* n = new TextDatum;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void TextDatum::Clear() {
// @@protoc_insertion_point(message_clear_start:TuriCreate.Annotation.Specification.TextDatum)
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

bool TextDatum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TuriCreate.Annotation.Specification.TextDatum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string text = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_text()));
          DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->text().data(), this->text().length(),
            ::google::protobuf::internal::WireFormatLite::PARSE,
            "TuriCreate.Annotation.Specification.TextDatum.text"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TuriCreate.Annotation.Specification.TextDatum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TuriCreate.Annotation.Specification.TextDatum)
  return false;
#undef DO_
}

void TextDatum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TuriCreate.Annotation.Specification.TextDatum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TuriCreate.Annotation.Specification.TextDatum.text");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->text(), output);
  }

  // @@protoc_insertion_point(serialize_end:TuriCreate.Annotation.Specification.TextDatum)
}

::google::protobuf::uint8* TextDatum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TuriCreate.Annotation.Specification.TextDatum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string text = 1;
  if (this->text().size() > 0) {
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->text().data(), this->text().length(),
      ::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "TuriCreate.Annotation.Specification.TextDatum.text");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->text(), target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TuriCreate.Annotation.Specification.TextDatum)
  return target;
}

size_t TextDatum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TuriCreate.Annotation.Specification.TextDatum)
  size_t total_size = 0;

  // string text = 1;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->text());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void TextDatum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TuriCreate.Annotation.Specification.TextDatum)
  GOOGLE_DCHECK_NE(&from, this);
  const TextDatum* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const TextDatum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TuriCreate.Annotation.Specification.TextDatum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TuriCreate.Annotation.Specification.TextDatum)
    MergeFrom(*source);
  }
}

void TextDatum::MergeFrom(const TextDatum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TuriCreate.Annotation.Specification.TextDatum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.text().size() > 0) {

    text_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.text_);
  }
}

void TextDatum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TuriCreate.Annotation.Specification.TextDatum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TextDatum::CopyFrom(const TextDatum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TuriCreate.Annotation.Specification.TextDatum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TextDatum::IsInitialized() const {
  return true;
}

void TextDatum::Swap(TextDatum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void TextDatum::InternalSwap(TextDatum* other) {
  text_.Swap(&other->text_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata TextDatum::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// TextDatum

// string text = 1;
void TextDatum::clear_text() {
  text_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& TextDatum::text() const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.TextDatum.text)
  return text_.GetNoArena();
}
void TextDatum::set_text(const ::std::string& value) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:TuriCreate.Annotation.Specification.TextDatum.text)
}
#if LANG_CXX11
void TextDatum::set_text(::std::string&& value) {
  
  text_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:TuriCreate.Annotation.Specification.TextDatum.text)
}
#endif
void TextDatum::set_text(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:TuriCreate.Annotation.Specification.TextDatum.text)
}
void TextDatum::set_text(const char* value, size_t size) {
  
  text_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:TuriCreate.Annotation.Specification.TextDatum.text)
}
::std::string* TextDatum::mutable_text() {
  
  // @@protoc_insertion_point(field_mutable:TuriCreate.Annotation.Specification.TextDatum.text)
  return text_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* TextDatum::release_text() {
  // @@protoc_insertion_point(field_release:TuriCreate.Annotation.Specification.TextDatum.text)
  
  return text_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void TextDatum::set_allocated_text(::std::string* text) {
  if (text != NULL) {
    
  } else {
    
  }
  text_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), text);
  // @@protoc_insertion_point(field_set_allocated:TuriCreate.Annotation.Specification.TextDatum.text)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Datum::kDatumHashFieldNumber;
const int Datum::kImagesFieldNumber;
const int Datum::kTextFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Datum::Datum()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TuriCreate.Annotation.Specification.Datum)
}
Datum::Datum(const Datum& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      images_(from.images_),
      text_(from.text_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  datumhash_ = from.datumhash_;
  // @@protoc_insertion_point(copy_constructor:TuriCreate.Annotation.Specification.Datum)
}

void Datum::SharedCtor() {
  datumhash_ = GOOGLE_LONGLONG(0);
  _cached_size_ = 0;
}

Datum::~Datum() {
  // @@protoc_insertion_point(destructor:TuriCreate.Annotation.Specification.Datum)
  SharedDtor();
}

void Datum::SharedDtor() {
}

void Datum::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Datum::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Datum& Datum::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

Datum* Datum::New(::google::protobuf::Arena* arena) const {
  Datum* n = new Datum;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Datum::Clear() {
// @@protoc_insertion_point(message_clear_start:TuriCreate.Annotation.Specification.Datum)
  images_.Clear();
  text_.Clear();
  datumhash_ = GOOGLE_LONGLONG(0);
}

bool Datum::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TuriCreate.Annotation.Specification.Datum)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int64 datumHash = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(8u)) {

          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &datumhash_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TuriCreate.Annotation.Specification.ImageDatum images = 10;
      case 10: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(82u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_images()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .TuriCreate.Annotation.Specification.TextDatum text = 20;
      case 20: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(162u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_text()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TuriCreate.Annotation.Specification.Datum)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TuriCreate.Annotation.Specification.Datum)
  return false;
#undef DO_
}

void Datum::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TuriCreate.Annotation.Specification.Datum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 datumHash = 1;
  if (this->datumhash() != 0) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->datumhash(), output);
  }

  // repeated .TuriCreate.Annotation.Specification.ImageDatum images = 10;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      10, this->images(i), output);
  }

  // repeated .TuriCreate.Annotation.Specification.TextDatum text = 20;
  for (unsigned int i = 0, n = this->text_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      20, this->text(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TuriCreate.Annotation.Specification.Datum)
}

::google::protobuf::uint8* Datum::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TuriCreate.Annotation.Specification.Datum)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int64 datumHash = 1;
  if (this->datumhash() != 0) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->datumhash(), target);
  }

  // repeated .TuriCreate.Annotation.Specification.ImageDatum images = 10;
  for (unsigned int i = 0, n = this->images_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        10, this->images(i), deterministic, target);
  }

  // repeated .TuriCreate.Annotation.Specification.TextDatum text = 20;
  for (unsigned int i = 0, n = this->text_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        20, this->text(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TuriCreate.Annotation.Specification.Datum)
  return target;
}

size_t Datum::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TuriCreate.Annotation.Specification.Datum)
  size_t total_size = 0;

  // repeated .TuriCreate.Annotation.Specification.ImageDatum images = 10;
  {
    unsigned int count = this->images_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->images(i));
    }
  }

  // repeated .TuriCreate.Annotation.Specification.TextDatum text = 20;
  {
    unsigned int count = this->text_size();
    total_size += 2UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->text(i));
    }
  }

  // int64 datumHash = 1;
  if (this->datumhash() != 0) {
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->datumhash());
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Datum::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TuriCreate.Annotation.Specification.Datum)
  GOOGLE_DCHECK_NE(&from, this);
  const Datum* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Datum>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TuriCreate.Annotation.Specification.Datum)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TuriCreate.Annotation.Specification.Datum)
    MergeFrom(*source);
  }
}

void Datum::MergeFrom(const Datum& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TuriCreate.Annotation.Specification.Datum)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  images_.MergeFrom(from.images_);
  text_.MergeFrom(from.text_);
  if (from.datumhash() != 0) {
    set_datumhash(from.datumhash());
  }
}

void Datum::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TuriCreate.Annotation.Specification.Datum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Datum::CopyFrom(const Datum& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TuriCreate.Annotation.Specification.Datum)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Datum::IsInitialized() const {
  return true;
}

void Datum::Swap(Datum* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Datum::InternalSwap(Datum* other) {
  images_.InternalSwap(&other->images_);
  text_.InternalSwap(&other->text_);
  std::swap(datumhash_, other->datumhash_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Datum::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Datum

// int64 datumHash = 1;
void Datum::clear_datumhash() {
  datumhash_ = GOOGLE_LONGLONG(0);
}
::google::protobuf::int64 Datum::datumhash() const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.Datum.datumHash)
  return datumhash_;
}
void Datum::set_datumhash(::google::protobuf::int64 value) {
  
  datumhash_ = value;
  // @@protoc_insertion_point(field_set:TuriCreate.Annotation.Specification.Datum.datumHash)
}

// repeated .TuriCreate.Annotation.Specification.ImageDatum images = 10;
int Datum::images_size() const {
  return images_.size();
}
void Datum::clear_images() {
  images_.Clear();
}
const ::TuriCreate::Annotation::Specification::ImageDatum& Datum::images(int index) const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.Datum.images)
  return images_.Get(index);
}
::TuriCreate::Annotation::Specification::ImageDatum* Datum::mutable_images(int index) {
  // @@protoc_insertion_point(field_mutable:TuriCreate.Annotation.Specification.Datum.images)
  return images_.Mutable(index);
}
::TuriCreate::Annotation::Specification::ImageDatum* Datum::add_images() {
  // @@protoc_insertion_point(field_add:TuriCreate.Annotation.Specification.Datum.images)
  return images_.Add();
}
::google::protobuf::RepeatedPtrField< ::TuriCreate::Annotation::Specification::ImageDatum >*
Datum::mutable_images() {
  // @@protoc_insertion_point(field_mutable_list:TuriCreate.Annotation.Specification.Datum.images)
  return &images_;
}
const ::google::protobuf::RepeatedPtrField< ::TuriCreate::Annotation::Specification::ImageDatum >&
Datum::images() const {
  // @@protoc_insertion_point(field_list:TuriCreate.Annotation.Specification.Datum.images)
  return images_;
}

// repeated .TuriCreate.Annotation.Specification.TextDatum text = 20;
int Datum::text_size() const {
  return text_.size();
}
void Datum::clear_text() {
  text_.Clear();
}
const ::TuriCreate::Annotation::Specification::TextDatum& Datum::text(int index) const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.Datum.text)
  return text_.Get(index);
}
::TuriCreate::Annotation::Specification::TextDatum* Datum::mutable_text(int index) {
  // @@protoc_insertion_point(field_mutable:TuriCreate.Annotation.Specification.Datum.text)
  return text_.Mutable(index);
}
::TuriCreate::Annotation::Specification::TextDatum* Datum::add_text() {
  // @@protoc_insertion_point(field_add:TuriCreate.Annotation.Specification.Datum.text)
  return text_.Add();
}
::google::protobuf::RepeatedPtrField< ::TuriCreate::Annotation::Specification::TextDatum >*
Datum::mutable_text() {
  // @@protoc_insertion_point(field_mutable_list:TuriCreate.Annotation.Specification.Datum.text)
  return &text_;
}
const ::google::protobuf::RepeatedPtrField< ::TuriCreate::Annotation::Specification::TextDatum >&
Datum::text() const {
  // @@protoc_insertion_point(field_list:TuriCreate.Annotation.Specification.Datum.text)
  return text_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Data::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Data::Data()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_data_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:TuriCreate.Annotation.Specification.Data)
}
Data::Data(const Data& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      data_(from.data_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:TuriCreate.Annotation.Specification.Data)
}

void Data::SharedCtor() {
  _cached_size_ = 0;
}

Data::~Data() {
  // @@protoc_insertion_point(destructor:TuriCreate.Annotation.Specification.Data)
  SharedDtor();
}

void Data::SharedDtor() {
}

void Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Data::descriptor() {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Data& Data::default_instance() {
  protobuf_data_2eproto::InitDefaults();
  return *internal_default_instance();
}

Data* Data::New(::google::protobuf::Arena* arena) const {
  Data* n = new Data;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void Data::Clear() {
// @@protoc_insertion_point(message_clear_start:TuriCreate.Annotation.Specification.Data)
  data_.Clear();
}

bool Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:TuriCreate.Annotation.Specification.Data)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .TuriCreate.Annotation.Specification.Datum data = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_data()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(input, tag));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:TuriCreate.Annotation.Specification.Data)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:TuriCreate.Annotation.Specification.Data)
  return false;
#undef DO_
}

void Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:TuriCreate.Annotation.Specification.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TuriCreate.Annotation.Specification.Datum data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data(i), output);
  }

  // @@protoc_insertion_point(serialize_end:TuriCreate.Annotation.Specification.Data)
}

::google::protobuf::uint8* Data::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:TuriCreate.Annotation.Specification.Data)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .TuriCreate.Annotation.Specification.Datum data = 1;
  for (unsigned int i = 0, n = this->data_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->data(i), deterministic, target);
  }

  // @@protoc_insertion_point(serialize_to_array_end:TuriCreate.Annotation.Specification.Data)
  return target;
}

size_t Data::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:TuriCreate.Annotation.Specification.Data)
  size_t total_size = 0;

  // repeated .TuriCreate.Annotation.Specification.Datum data = 1;
  {
    unsigned int count = this->data_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Data::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:TuriCreate.Annotation.Specification.Data)
  GOOGLE_DCHECK_NE(&from, this);
  const Data* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const Data>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:TuriCreate.Annotation.Specification.Data)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:TuriCreate.Annotation.Specification.Data)
    MergeFrom(*source);
  }
}

void Data::MergeFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:TuriCreate.Annotation.Specification.Data)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  data_.MergeFrom(from.data_);
}

void Data::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:TuriCreate.Annotation.Specification.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Data::CopyFrom(const Data& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:TuriCreate.Annotation.Specification.Data)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Data::IsInitialized() const {
  return true;
}

void Data::Swap(Data* other) {
  if (other == this) return;
  InternalSwap(other);
}
void Data::InternalSwap(Data* other) {
  data_.InternalSwap(&other->data_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Data::GetMetadata() const {
  protobuf_data_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_data_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Data

// repeated .TuriCreate.Annotation.Specification.Datum data = 1;
int Data::data_size() const {
  return data_.size();
}
void Data::clear_data() {
  data_.Clear();
}
const ::TuriCreate::Annotation::Specification::Datum& Data::data(int index) const {
  // @@protoc_insertion_point(field_get:TuriCreate.Annotation.Specification.Data.data)
  return data_.Get(index);
}
::TuriCreate::Annotation::Specification::Datum* Data::mutable_data(int index) {
  // @@protoc_insertion_point(field_mutable:TuriCreate.Annotation.Specification.Data.data)
  return data_.Mutable(index);
}
::TuriCreate::Annotation::Specification::Datum* Data::add_data() {
  // @@protoc_insertion_point(field_add:TuriCreate.Annotation.Specification.Data.data)
  return data_.Add();
}
::google::protobuf::RepeatedPtrField< ::TuriCreate::Annotation::Specification::Datum >*
Data::mutable_data() {
  // @@protoc_insertion_point(field_mutable_list:TuriCreate.Annotation.Specification.Data.data)
  return &data_;
}
const ::google::protobuf::RepeatedPtrField< ::TuriCreate::Annotation::Specification::Datum >&
Data::data() const {
  // @@protoc_insertion_point(field_list:TuriCreate.Annotation.Specification.Data.data)
  return data_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace Specification
}  // namespace Annotation
}  // namespace TuriCreate

// @@protoc_insertion_point(global_scope)
